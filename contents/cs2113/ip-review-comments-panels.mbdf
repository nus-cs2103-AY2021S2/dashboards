
<panel type="info" header="### 1. WANG..CHEN `@huachen24` (23 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570706611" expanded>

Would it be a good idea to add a comment to explain the unicode so that people know what you are returning?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570707297" expanded>

To me it seems a little unintuitive as to what D might mean if it's my first time seeing the code, perhaps you could make it an attribute of the Deadline class?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570707877" expanded>

I agree with Hazel on this, the same could be done for BY_AT_LENGTH as well. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570708819" expanded>

To add on, List is an interface in Java so perhaps avoiding list would be a better idea since you are using an array in this case
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570709535" expanded>

continue appears here but not in subsequent else if statements, perhaps you could standardize across the whole while loop?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570710615" expanded>

I don't think there is a need for concatenation here, as "\t  " should work just fine
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570711108" expanded>

I like how u split the singular and plural cases
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570711352" expanded>

I like that you have a separate method to printing the divider line as it is frequently used
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570711789" expanded>

Same as in the Deadline class and the rest of the classes
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570712963" expanded>

I notice that ToDo doesn't override the getStatusIcon method from Task, whereas Deadline and Event does. Is this intended? And also since Task will never be called in your program, would it be better to just delete the overriding methods and just make the change in the method in the Task class?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570643855" expanded>

Should [D] be a constant in the class so that it is clearer what it means? Like each subclass of Task can have a taskType?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570697280" expanded>

I think that divider can be named in all caps, since it is a constant. 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570699841" expanded>

5 seems like a magical number here. Would it be better if you change it to get the index of the start of the task name?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570700183" expanded>

Same as addToDo, not sure how 9 is derived without knowing the command syntax
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570700695" expanded>

Could the 4 possibly change if the user enters a typo?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570700887" expanded>

Same as addToDo
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570701099" expanded>

I think that this can be all caps as well since it is a constant
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570701967" expanded>

When using contains(), would there be a case where `todo get homework done` triggers this and thus create an exception where 'get homework done' cannot be converted to an int?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570702228" expanded>

Same as Deadline class
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570702391" expanded>

If you're just returning an X, would it be better to just use 'X' so that the confusing unicode can be avoided?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570703282" expanded>

I think that it would be good to standardize having a newline at the end of file for all files
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570703586" expanded>

I like that you added the Override tag so that it's immediately clear that this method is being overridden 
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570703916" expanded>

I think that 2 blank lines is enough between import statement and the rest of the code
</panel>

</panel>

<panel type="info" header="### 2. OWEN..G EN `@blank-bank` (21 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570741071" expanded>

There is an extra indentation for the case block
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570741376" expanded>

Good coding standards for if else blocks
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570741797" expanded>

Naming convention for methods and variables are all aligned with the coding standards
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570742459" expanded>

Good naming conventions for boolean

</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570743413" expanded>

Might be slightly unclear the usage of the variable
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570743557" expanded>

This class is very well made and well thought out. Well done!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r573459972" expanded>

Can consider putting the welcome message into a function for increase readability
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r573460404" expanded>

can consider using a general function to deal with each possible command (OOP way), instead of a sequential code.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r573461046" expanded>

The code in this block is slightly confusing. Maybe can include some comments or group them into a function with a function name that details the purpose of the function
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r573461256" expanded>

Consider using switch statements instead of if-else.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r573461402" expanded>

Nice and efficient coding.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570744466" expanded>

Good and efficient code
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570744675" expanded>

Using switch statements will improve your code quality!
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570744966" expanded>

Can consider creating a class to parse the information from the cmd line
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570745158" expanded>

Good code quality, simple yet efficient

</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570745870" expanded>

can define this pretty print line as a constant
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r573457806" expanded>

Good class to have in order to separate the error checking!
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r573458031" expanded>

Good use of constant for pretty printing
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r573458569" expanded>

maybe can think of more functions for user interface
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r573458912" expanded>

Since this is found in the user interface, maybe can consider removing this and call from the user interface class instead.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r573459244" expanded>

This block of code is very clean. Simple and easy to understand! Well done!
</panel>

</panel>

<panel type="info" header="### 3. ZHU ..IKUN `@zikunz` (19 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569882638" expanded>

Should there be one more space between "Task" and "{" here? I noticed a similar issue (though very minor) in line 5 of Deadline.java as well.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569883260" expanded>

Should there be one more space between "Task" and "{" here? I noticed a similar issue (though very minor) in line 5 of Event.java as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569883763" expanded>

Should there be one more space between "Task" and "{" here? I noticed a similar issue (though very minor) in lines 18 and 22 of Task.java as well.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569884339" expanded>

Should there be one more space between ")" and "{" here? I noticed same issue (though very minor) in several other places of Duke.java too.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569886105" expanded>

Perhaps you could further improve consistency by considering having a space before and after “+”, just like “byIndex + 4” here because you do so in other parts of your code such as in line 39 (“\t” + t)? :)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569886514" expanded>

Perhaps you could consider using "inputs" (plural forms are used on names representing a collection of objects) as the variable name after splitting taskDescription? :D
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569886915" expanded>

You might tweak your code a bit to make your for loops look like this:
for (int i = 0; i &gt; nElements; i++) {
    // Code
}
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569887493" expanded>

You could consider having a space between "while" and "(condition)" :)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569887628" expanded>

Same thing here, perhaps you could consider having a space between "if" and "(condition)" as well :)
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569889567" expanded>

Hey, I like how clean this bit of code is 👍
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569890578" expanded>

Should there be one more space between "Task" and "{" here? I noticed a similar issue (though very minor) in lines 3 and 7 of Todo.java as well.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569897516" expanded>

Great naming for variables!
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569897698" expanded>

Very descriptive and appropriate naming for functions!
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569898705" expanded>

Very succinct code with high readability, well done! :)
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569899400" expanded>

Well done! You could consider using a named constant for 100, say "MAX_TASKS_SIZE".
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569894730" expanded>

It seems like there is an additional space between "super.convertToTaskOutputString()" and "+".
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569895312" expanded>

Very logical action here. Perhaps you could consider using "commandAndTaskNumbers" (plural forms are used on names representing a collection of objects) as the variable name after splitting input? :D
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569895488" expanded>

Hey, I like how clean this bit of code is 👍
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569895853" expanded>

I like the fact that you wrote clear comments for some variables and all methods used. :D
</panel>

</panel>

<panel type="info" header="### 4. LEW ..GLAS `@douglaslewpc` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569892100" expanded>

Mixing if and case statements affects readbility of code as there are multiple conditional statements (nested conditional statements)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569892529" expanded>

Can merge into a single line
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569892891" expanded>

Can consider renaming addedTasks to tasks to enhance readability
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569893393" expanded>

Readability can be enhanced
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569897555" expanded>

Avoid using a conditional statement in a single line
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569897734" expanded>

Avoid mixing if statements and case statements as readability may be affected.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569898812" expanded>

Method name is appropriate
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569899120" expanded>

switch case statement indentation needs to be fixed.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569889015" expanded>

readability can be enhanced here, perhaps one line per newline
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569889552" expanded>

Can be merged into a single line to enhance readability
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569890119" expanded>

the name tasks can be considered for the name of the array to show that the array contains multiple tasks
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569890618" expanded>

Case statements are clear
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569895518" expanded>

Refactoring done here enhanced readability
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569896563" expanded>

Avoid assigning null value to variable
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569896761" expanded>

description and by variables appropriately named
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569896895" expanded>

Can consider separating the \n to enhance readability
</panel>

</panel>

<panel type="info" header="### 5. GERA..KIAT `@gerardtwk` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/41#discussion_r569194778" expanded>

Since the Strings referenced by both "logo" and "divider" variables will never change, perhaps you can consider declaring them as constants instead, by capitalizing both variable names and adding the "final" keyword to them.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/41#discussion_r569207285" expanded>

Perhaps you can rename "inputData" array to something like "arguments", so as to adhere to the coding standard of "Plural form should be used on names representing a collection of objects."
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/41#discussion_r569210897" expanded>

I believe a "default" case should be added here, so as to adhere to the coding standard on using a switch statement.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/41#discussion_r569217875" expanded>

This highlighted block of code can be placed in a separate method since it has been repeated among the cases of "deadline", "event" and "todo".
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/41#discussion_r569224253" expanded>

Perhaps you might want to first declare the array size as a constant, then use the constant to initialize your array so as to improve your code readability and thus the quality. This is also to satisfy the code quality section on "Avoid Magic Numbers".
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/41#discussion_r569238524" expanded>

Varying levels of abstraction.

The abstraction level of this entire block of code, when compared with "UI.showWelcomeScreen();" at line 7, has different levels of abstraction. Perhaps you may want to shift the switch statement to a separate method, so as to achieve "Single Level of Abstraction Principle".
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/41#discussion_r569276154" expanded>

This method exceeds 30 LOC and hence violates the code quality guideline on "Avoid Long Methods".
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569145109" expanded>

Varying levels of abstraction.

Perhaps it will be great if you can shift line 19 to 22 and the switch statement to a separate method each, so as to achieve "Single Level of Abstraction Principle".
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569148391" expanded>

The word "Customised" is a British spelling and violates the coding standard of using American spelling only.
Perhaps you may want to correct it to "Customized" instead.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569151252" expanded>

I like how you personalize your chatbot with a name. 

I think there is a minor wording issue with the phrase "personal assistance chat-bot" in your comment. Perhaps you might want to rephrase it to "personal assistant chatbot".
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569154054" expanded>

I agree on this too! The way you list your imports explicitly allows future collaborators to know exactly what libraries they need to be aware of before working on your code.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569157476" expanded>

I like the way you standardize the declaration of the constant TASK_TYPE across other subclasses of Task.

The way you name, capitalize and declare the constant TASK_TYPE adheres very well to the coding standard and convention, well done!
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569158719" expanded>

I believe a "default" case should be added here, so as to adhere to the coding standard on using a switch statement.


</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569166091" expanded>

The naming of this method can be further improved as the current name does not sound like a boolean. This violates the coding standard of "Boolean variables/methods should be named to sound like booleans".
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569166742" expanded>

I believe a "default" case should be added here, so as to adhere to the coding standard on using a switch statement.
</panel>

</panel>

<panel type="info" header="### 6. SIM .. JIE `@SimJJ96` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r569906732" expanded>

Perhaps you could rename the variable to hasRun which meets the coding standard for boolean
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r569910933" expanded>

Perhaps you should not have added 4 more indentations here as initially, it was 8 indentation which fulfills the coding standing
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r569911199" expanded>

I like your format of a switch statement which follows the coding standard
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r569911686" expanded>

Good job for following the coding standard
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r571444539" expanded>

Perhaps you could extract the switch statement into a method for better code quality
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r571445155" expanded>

Perhaps you could mention that you are overriding the toString method in the parent class
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r571445774" expanded>

Maybe you could give input.indexOf(' ') a name to improve readability
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r571447034" expanded>

Perhaps you could also add a greetings method to improve readability
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r569912881" expanded>

Perhaps you could add the else if statement to the above line to follow the coding standard 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r569913570" expanded>

Good use of switch statement to follow coding standard
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r569914119" expanded>

Perhaps you could put else statement to be more clear and follow coding standard
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r569914568" expanded>

Good use of commenting fall through which follow standard
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r571447666" expanded>

Perhaps you could give this method a different name?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r571447924" expanded>

Good use of namings and use of Single Level of Abstraction Principle in the method
</panel>

</panel>

<panel type="info" header="### 7. OSCA.. LAI `@oscarlai1998` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/63#discussion_r569061931" expanded>

There should be a space after the condition before curly bracket
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/63#discussion_r569062432" expanded>

Constant name should be all caps
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/63#discussion_r569062863" expanded>

Add a space before and after the else and curly brackets
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/48#discussion_r569067508" expanded>

You have already declared Newline so you can use it here
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569048292" expanded>

Hello, functionality looks good! However, I suggest formatting into more methods such as checkDone so you code looks cleaner
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569049482" expanded>

Leave a space before and  after curly bracket 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569050884" expanded>

I believe constant names must be  all in uppercase
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569053055" expanded>

you can just Case "D" and Case "E" to return the description.substring  instead of returning from case D and Case E individually 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569055398" expanded>

You can maybe format this into another method to make your code cleaner
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569056159" expanded>

You need to add a space after curly bracket and before the curly bracket
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/29#discussion_r569054194" expanded>

Hello, I believe a constant must have all caps.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/29#discussion_r569057177" expanded>

You need a space after the else statement before the curly bracket
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/29#discussion_r569059372" expanded>

Add a comment to the method 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/29#discussion_r569060064" expanded>

All comments on a method should start with a /** and end with a */ format.
</panel>

</panel>

<panel type="info" header="### 8. JONA..YANG `@JonathanKhooTY` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/90#discussion_r569884183" expanded>

Good and consistent usage of PascalCase for naming of classes
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/90#discussion_r569884288" expanded>

Good and consistent usage of camelCase for methods
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/90#discussion_r569884664" expanded>

Consistent and proper indentation and bracketing for if-elseif statements
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/90#discussion_r569884813" expanded>

Good job on not exceeding line limit
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/28#discussion_r569888233" expanded>

Good method name. Clear and concise

</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/28#discussion_r569888408" expanded>

Good if-else structure. Short and concise.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/28#discussion_r569888641" expanded>

Good definition for methods.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/28#discussion_r569889098" expanded>

Good usage of OOP. Makes code clear and easy to understand.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/28#discussion_r569889304" expanded>

Comment at the bottom helps understand what line above means.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/1#discussion_r569885999" expanded>

Complicated expressions. Takes reader time to decipher what code means.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/1#discussion_r569886153" expanded>

Try to avoid nested if-else conditions. Gets confusing
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/1#discussion_r569886301" expanded>

What does slash mean? Definition is not really clear, can be confusing.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/1#discussion_r569886731" expanded>

Can be confusing due to long expression. Takes reader time to decipher what it means.
</panel>

</panel>

<panel type="info" header="### 9. IVAN..I EN `@ivanchongzhien` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569049801" expanded>

Interesting how you personalized the readme file! Nice brief introduction, just a minor typo at line 5
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569050272" expanded>

Nice clean main method.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569053945" expanded>

Good use of understandable constants. Seen in other parts of the code as well.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569060348" expanded>

Inconsistent spacing after if statement, before the conditional. Also seen with some for loops.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569111666" expanded>

Perhaps use multi-line comments instead of single line comments? Might look neater!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569111831" expanded>

Good child class implementation!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569114610" expanded>

Or perhaps you could include the logo and line 10 printing in the `greet(`) method?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569115491" expanded>

Suggestion - maybe refactor this part into a method "getInput" to align with the SLAP Principle
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569116016" expanded>

Maybe could consider using a more detailed name? Like `printLine()`. `end()` sounds ambiguous and could mean terminating the program
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569116768" expanded>

The variable name `on` does not have much meaning to a reader. Maybe consider changing it to a name which describes it's function? Like  "description"/"taskDescription"
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569126481" expanded>

Can I suggest:
Instead of doing the +1 inside (line 13)
`System.out.println(count + 1 + ": " + TaskManager.tasks[count]);`

Maybe you can initialize count = 1? I don't think there's anything wrong with your implementation, just for your consideration!
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569127654" expanded>

Method name can maybe be better defined? `getCommand(input)` is not actually getting any command but is parsing the input into the respective fields. 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569132970" expanded>

Detailed and clear method naming!
</panel>

</panel>

<panel type="info" header="### 10. RYAN..KWOK `@kwokyto` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569911960" expanded>

I like how clean this class is, there are no redundant functions here. Also, no coding violations here. Well done! (:
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569912163" expanded>

This is the correct if-conditional layout with the 'break' in a separate line, well done!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569912515" expanded>

This is the correct if-conditional layout. Perhaps you could consider using a "switch" statement instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569912928" expanded>

I found no coding violations here. Well done! (:
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569905140" expanded>

I like how clean this class is, there are no redundant functions here. Also, no coding violations here. Well done! (:
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569906058" expanded>

This is a correct formatting for switch, good job for keeping that in mind!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569909196" expanded>

This is the correct try-catch layout, good job!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569911083" expanded>

This is the correct if-conditional layout with the 'break' in a separate line, well done!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569913496" expanded>

Should this while loop be extracted out? I think it might be cleaner if abstracted
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569913626" expanded>

Good job with the internal abstraction, very neat!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569914280" expanded>

I am not sure if you should do the try{function} catch error instead of having the try catch in the function itself. perhaps it would be better to try the function instead
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569914609" expanded>

I think you could add in "@Override" above this?
</panel>

</panel>

<panel type="info" header="### 11. CHEA..FENG `@cloudy3` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r570201153" expanded>

May wanna add some error handling if user enters a task number that is out of range
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r570202153" expanded>

Nice! Clean use of inheritance
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/74#discussion_r570685586" expanded>

Collection of Task objects "tasks" is in plural form, good naming convention!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/74#discussion_r570685729" expanded>

Switch statement follows the Java coding convention, good work!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/74#discussion_r570686241" expanded>

Good use of name for boolean!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/74#discussion_r570686606" expanded>

Very readable and easy to understand, nice
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/74#discussion_r570686973" expanded>

Naming a task object "temp" may be confusing to readers. May want to specify what exactly is this Task Object
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r570681698" expanded>

Great Job! Constants are in Uppercase and are very readable
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r570682165" expanded>

May want to change to something like "isDeadlineValidated" to make it sound more like a boolean
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r570682306" expanded>

May want to change to something like "isTodoValidated" to make it sound more like a boolean
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r570683148" expanded>

Switch statement follows the Java coding standard, good job!
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r570683637" expanded>

Collection of Task objects "tasks" is in plural form, good naming convention!
</panel>

</panel>

<panel type="info" header="### 12. LI P..GRUI `@PingruiLi` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570683848" expanded>

A constant name should be in capital letter
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570685115" expanded>

the naming here is a little confusing, it might be better if you use something like "doBy" or "finishBy".
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570685842" expanded>

well done! the branch is in correct format and  correctly follows SLAP 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570686652" expanded>

it might be better if declaring "\u2718" as a string constant at the beginning. although you add comment here, it looks like a magical literal.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570687261" expanded>

the naming is a little confusing as the member variable has the same name as the class
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/45#discussion_r570690265" expanded>

the print message part is repeated in addTodo, addDeadline and addEvent, maybe you could consider making it a separate method.  
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570681066" expanded>

it would be better if the collections are named as plural
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570681384" expanded>

the condition should be put in a single line
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570681903" expanded>

the layout doesn't follow code standard. The standard format should be: 
if {
} else if {
} else {
} 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570682235" expanded>

the "------------" is like a magic literal, it might be better if making it a string constant with meaningful name
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570682723" expanded>

it would be better if follows SLAP in this section
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570683113" expanded>

the try catch clause doesn't follow the format in coding standard
</panel>

</panel>

<panel type="info" header="### 13. HU W..ENQI `@Vinci-Hu` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/75#discussion_r569919184" expanded>

It's quite good to introduce a method for the separation operation so that dealing with input is divided into small tasks.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/75#discussion_r569920096" expanded>

I have a doubt here. Should taskCounter be maintained here? What if the user did not type in a correct format like without a "/by " phrase, but it is still counted.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/75#discussion_r569920881" expanded>

I think the expressions here are pretty straightforward, only that they are not in the same format. What I mean is they don't look like parallel statements. These recognition for keywords part might be optimized later on.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/75#discussion_r569921583" expanded>

Very neat for calling super toString method.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/75#discussion_r569921896" expanded>

The constant string above are very readable. This is good.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/75#discussion_r569922636" expanded>

It is function overloading, I think is quite straightforward. But can also separate into "printList" and "printResponse" as they are quite different as in the incode- comments.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/42#discussion_r569931185" expanded>

constant string naming should be all UPPERCASE
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/42#discussion_r569932539" expanded>

The method names are all in camelCase. It's good.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/42#discussion_r569932692" expanded>

Plural forms for arrays are good.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/42#discussion_r569933081" expanded>

Indentation is four spaces, it's the correct layout.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/42#discussion_r569933765" expanded>

Consider putting else if statement on the same line just after the previous curly bracket.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/42#discussion_r569934404" expanded>

Better if you put the //comments on a different line with indentation.
</panel>

</panel>

<panel type="info" header="### 14. JONA..LONG `@jonahtwl` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569049396" expanded>

Hi, I like the way you tokenize your inputs before passing them into the function. And maybe assigning them to a specific string is before passing would be easier to read compared to the array item itself?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569054434" expanded>

I believe conditional statements should be placed on a separate line and wrapped with curly brackets even if it is just a line of code. :)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569055496" expanded>

I like the way that you declare a constant here to make the code clean! And good job remembering the format. Most of us would just forget it.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569058734" expanded>

I noticed that you use inheritance for all the other subclasses and it's clean and easy to read for each individual subclass. Keep up the good work!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/27#discussion_r569074251" expanded>

You may want to have a more definite name here for the Task array instead of just t as it might get confusing later on
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/27#discussion_r569080292" expanded>

I like the way that all 3 methods are of the same naming convention to show that they are doing similar tasks. But I think the naming can be changed to make it slightly clearer? Like "addDeadline" etc. as enter might be misleading depending on subsequent functions created to key in deadlines. :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/27#discussion_r569081254" expanded>

I like the way you introduced a new class to house the logo and the UI of your program.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/27#discussion_r569082370" expanded>

There is quite a few functions within the same line. Maybe we can split it to different lines to improve readability and understanding?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/13#discussion_r569060228" expanded>

Nice use of documentation here to explain the functions and parameters passed into the method! 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/13#discussion_r569063337" expanded>

I am not too sure on this myself but, maybe you can start a comment with the "//"? As "/**" is used for Java documentation on methods?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/13#discussion_r569064707" expanded>

Great use of constants! Do always remember the naming convention as what you are already doing! :)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/13#discussion_r569067501" expanded>

You may want to use a constant to replace the number 4 here (or maybe a comment to explain) as other's may not understand why we have to offset 4 from the date index itself.
</panel>

</panel>

<panel type="info" header="### 15. LEE ..PENG `@Leeyp` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/88#discussion_r569913291" expanded>

Good use of methods to follow Coding Quality.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/88#discussion_r569913385" expanded>

Good use of try-catch statements!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/88#discussion_r569913503" expanded>

Good use of methods to make code cleaner!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/88#discussion_r569913775" expanded>

Can consider keeping the code in main more abstracted
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/88#discussion_r569913878" expanded>

Can consider abstracting these conditionals into methods or booleans
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/88#discussion_r569913973" expanded>

Can consider abstracting these checks into methods for clarity
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/71#discussion_r569906536" expanded>

Good use of switch and case
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/71#discussion_r569910002" expanded>

Consider clarifying what these "Details" are, for clarity
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/71#discussion_r569910227" expanded>

Good job on following coding standards for if-else!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/71#discussion_r569910445" expanded>

Can consider using a clearer name for "sc"
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569911157" expanded>

Agree with this comment.
</panel>

</panel>

<panel type="info" header="### 16. FANG..NJIA `@fangxinjia0203` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/98#discussion_r569892090" expanded>

can remove the blank line
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/98#discussion_r569906072" expanded>

looks clean!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/98#discussion_r569909291" expanded>

new line after bracket
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/98#discussion_r569909617" expanded>

looks good! easy to understand
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/98#discussion_r569910242" expanded>

another blank line here
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/80#discussion_r569888068" expanded>

looks good for the coding standard
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/80#discussion_r569889549" expanded>

Maybe do not use the shortcut for the String
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/80#discussion_r569893473" expanded>

Maybe can try other names for boolean 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/80#discussion_r569898003" expanded>

good changes! looks clearer
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/80#discussion_r569898445" expanded>

datatype and name seem a bit confusing 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/80#discussion_r569901617" expanded>

everything is good here
</panel>

</panel>

<panel type="info" header="### 17. CHIA..A-EN `@Chiamjiaen` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/67#discussion_r570659537" expanded>

if-else statements follow coding standards closely. However, you can consider using case statements to implement this huge if-else block
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/67#discussion_r570660592" expanded>

Interesting naming convention, I think "Doby" sounds cute but maybe "DoBy" would be clearer?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/67#discussion_r570661643" expanded>

perhaps you can rename this setTaskDone to something else? I almost thought it looked like a recursive function until I noticed the method setTaskDone in the Task class also
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/67#discussion_r570662100" expanded>

This -1 seems slightly out of place, maybe you can replace it with a static final variable or a constant? I could not tell the reason for it.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570643973" expanded>

Really consistent if-else nesting, but a case statement may be more helpful here!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570645788" expanded>

If else statements should also follow proper coding standards! ie.
If {
} else if {
} else {
}
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570651542" expanded>

Funny and interesting comments! However, you should probably follow the coding standards on comment formatting going forward!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570653290" expanded>

Similarly, this try-catch handler could be formatted better in the following way:
try {
    statements;
} catch (Exception exception) {
    statements;
} finally {
    statements;
}
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570655866" expanded>

These texts are great for adding personality! But they seem slightly long and may be violating some coding standards :)
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570656276" expanded>

Your Duke class is looking really long! Maybe consider breaking it up further into separate classes! That would help readability a lot!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/33#discussion_r570656691" expanded>

if you want to get rid of the annoying blank spaces that sometimes show up in Strings, perhaps you can consider using String.trim() to format the string into something shorter!
</panel>

</panel>

<panel type="info" header="### 18. RAMA..NAVI `@vaiish371` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/94#discussion_r570652439" expanded>

It would be good practice to keep the indentation for wrapped lines to: 8 spaces more than the parent line.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/94#discussion_r570657098" expanded>

Very clean code! Looks good to merge
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/94#discussion_r570966922" expanded>

Perhaps you can use plural variable name for representing the collection of Task objects. Even though taskList is quite clear and can be easily understood, use of plural word like "tasks" could better convey the meaning.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/85#discussion_r570989946" expanded>

Any reason why you have not included ".by" with 'this' keyword? I think it would be better practice to specify which attribute the calling object is accessing and not to just directly access this object.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/85#discussion_r570993455" expanded>

Using "rd" as the Random object name seems to be vague and might not go by the naming convention. Instead you can use a more specific word like randomNumber that provides better readability and explanation to what you are intending to do.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/66#discussion_r570648847" expanded>

All variables, methods, boolean values follow the coding standard by use of appropriate casings! Looks neat :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/66#discussion_r570659633" expanded>

For wrapped lines, maybe you can consider indenting with 8 spaces more than the parent line.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/66#discussion_r570970601" expanded>

This method is not used anywhere in the program. Maybe you might want to invoke it whenever you need to access the "description" variable but since you have used the toString() method to achieve that purpose, you can omit this method.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/39#discussion_r570996947" expanded>

This method has not been invoked in any other part of the code, so if it isn't used, perhaps you might want to omit to avoid having dead code.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/39#discussion_r570998282" expanded>

Instead of using nouns such as loopOperation as the name of your method, perhaps you could use verbs like: operateLoop(). This would make it more understandable for the readers.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/39#discussion_r570999305" expanded>

During fall-through cases, where there are no break statements, it is good practice to include a comment like //FALL-THROUGH.
</panel>

</panel>

<panel type="info" header="### 19. SEH ..N RU `@xseh` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/55#discussion_r569052119" expanded>

Iterator variables can be called i, j, k etc. In this case, use f instead of fragment. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/55#discussion_r569053573" expanded>

The comments should end with a full stop. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/55#discussion_r569056536" expanded>

Add // Fallthrough comment for cases that does not have break. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/55#discussion_r569088283" expanded>

Plural form should be used on names representing a collection of objects. 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569063434" expanded>

Variable names could be more understandable if the naming is more descriptive (e.g. COMMAND_MARK_WORD) to know that the constant is a command word. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569065412" expanded>

There should be an empty line between description and parameter section. Comments should also have full stop at the end. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569066245" expanded>

variable names should be in camel case. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569067358" expanded>

Function name could be more descriptive of what the function does (does it print a standard string or borders, etc.). Perhaps using printBorderLine() would be better instead. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569070039" expanded>

Variable naming should be clear. In this case, perhaps totalNumberOfTask works better. 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569079111" expanded>

Agree. It shows exactly what the program would do at a top level without clutter. However I think that loopCommands() method could be named better. Could use a while loop with executeCommand() and include the getCommand() method here instead. This is to show that the program prints a welcome message, takes user input, executes some commands from the user input, then exit after loop is escaped. Instead of just looping some commands with loopCommands(). 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/43#discussion_r569083380" expanded>

Could put these strings into a constant to make reading and future editing of such strings easier (e.g. final static MESSAGE_SET_TO_DONE). Applies to the other message strings as well. 
</panel>

</panel>

<panel type="info" header="### 20. CHON.. HAO `@8kdesign` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/62#discussion_r569048394" expanded>

Might want to add spacing between "if" and '('
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/62#discussion_r569050889" expanded>

I like how you seperated the task portion of the code with a task manager
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/62#discussion_r569056346" expanded>

Perhaps "sizeOfTasks" can be renamed to "capacity" for consistency with Duke.java and to prevent confusion with "numOfTask" below
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/62#discussion_r569062222" expanded>

Perhaps a more intuitive name for "taskIndexShow"?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/25#discussion_r569072766" expanded>

Perhaps you can combine the strings so that you only need to use one println
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/25#discussion_r569099675" expanded>

Perhaps you can refactor this method based on the different types of tasks to make it shorter 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/25#discussion_r569125325" expanded>

Perhaps you can consider using ".startsWith" so that you won't have magic numbers
Same for the other if statements below
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/25#discussion_r569128324" expanded>

Perhaps you can remove tasks as a parameter
The method should be able to access the arraylist even without having it as a parameter
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/25#discussion_r569129668" expanded>

Perhaps you can give it a name like "deadline" instead of just 'd'
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/25#discussion_r569130021" expanded>

Might want to declare a constant for the value 5 with a name that matches its purpose
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/25#discussion_r569133051" expanded>

Can I check if isDone status is implemented for printing of deadline and events?
It seems like the "getStatusIcon" method is only used in Todo
</panel>

</panel>

<panel type="info" header="### 21. WONG..HONG `@jadenwjh` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570690262" expanded>

Well done on providing named constants
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570691018" expanded>

Have you considered using String.split() method for finding the task description?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570691578" expanded>

Consider refactoring this switch case. The execution path taken when everything goes well should be clearer here. Consider wrapping each outcome into a method that best describes the outcome
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570692143" expanded>

Have you considered using named constant variables for the symbols?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570692363" expanded>

Well done on making a UI class specific for the output
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/74#discussion_r570681071" expanded>

Have you considered using short-forms for variable names?


</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/74#discussion_r570685584" expanded>

Indentation for this switch case is done well
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/74#discussion_r570685886" expanded>

Method names are verbs and camel case, well done.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/74#discussion_r570686229" expanded>

Boolean variables sound like booleans, well done
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/74#discussion_r570687483" expanded>

Well done on using the plural form for a collection of tasks
</panel>

</panel>

<panel type="info" header="### 22. SONG..G YU `@Song0180` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r570686222" expanded>

Maybe the naming of this `keyWordBeforeDeadline` can be changed to `deadlineTaskContent` to be more meaningful & readable?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r570686668" expanded>

I like this organization in the `main` method!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r570687137" expanded>

You may want to use `switch` to replace multiple `if`s here
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r570688015" expanded>

Maybe you can use auto-formatting to ensure the positions of braces are consistent. 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r570688714" expanded>

Maybe instead of using the static method, encapsulate this as a public method of the `Event` class can be more handy
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/8#discussion_r570682096" expanded>

Should this be extracted out as something like if(hasTask()) for better readability?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/8#discussion_r570682690" expanded>

Should this be extracted as a method to get the taskType and taskToAdd from the input?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/8#discussion_r570683673" expanded>

Maybe we can make the task type a protected attribute instead of overriding the return value of this method?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/8#discussion_r570684356" expanded>

Maybe instead of `event`, use a verb for method names (e.g. `addEvent`)
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/8#discussion_r570684623" expanded>

This method does more than getting input, maybe can use a more appropriate name?
</panel>

</panel>

<panel type="info" header="### 23. JOVA..CHUN `@jovanhuang` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/59#discussion_r569086935" expanded>

I like how you followed the coding standards and define "D" as a final string constant. I see this in other places as well.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/59#discussion_r569088766" expanded>

I like how your methods name are self-explanatory. I see this in other places as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/59#discussion_r569089032" expanded>

I like how you followed the coding standards and split long lines into shorter lines. I see this in other places as well.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/59#discussion_r569090498" expanded>

I like how you extract the methods out for the main program. I see this in other places as well.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/59#discussion_r569091720" expanded>

I like how you put curly bracket although there is only one statement inside. I see this in other places as well.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569093505" expanded>

I like how your 'if' statement isn't too deep. It is easy to read.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569093754" expanded>

I like how you abstract out methods. I see this in other places as well.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569094659" expanded>

I like how you avoid "magic numbers" and define them as a variable. I see this in other place of your codes as well.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569095420" expanded>

Should this be extracted out?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569095584" expanded>

Should "D" be defined as a final string variable? I see this in other places as well.
</panel>

</panel>

<panel type="info" header="### 24. NG M..SING `@NgManSing` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/38#discussion_r569091773" expanded>

Do you think "D" could be introudued as a static final constant?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/38#discussion_r569093417" expanded>

Is it possible to avoid the "nested if" blocks?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/38#discussion_r569094045" expanded>

Do you think "taskArgs" coukd be renamed as "taskArg" since it is singular?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/38#discussion_r569094486" expanded>

Will it be better to use the standard class "Stringbuilder"?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/38#discussion_r569094649" expanded>

Do you think "E" could be introudued as a static final constant?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/38#discussion_r569094842" expanded>

Do you think "T" could be introudued as a static final constant?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/15#discussion_r569128500" expanded>

Would it be better if these lines of code are extracted to static methods?

e.g. showWelcomMsg(), showByeMsg(), showHelp(), ...
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/15#discussion_r569130728" expanded>

Would it be better if user input checking is done inside corrisponding methods?

e.g. check wherher "input.contains(" /at ")" is true within addEvent(input)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/15#discussion_r569133984" expanded>

No redundant method is introduced. Good!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/15#discussion_r569134256" expanded>

Import only the necessary library. Good!
</panel>

</panel>

<panel type="info" header="### 25. KALA..DIGE `@ManikaHennedige` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/21#discussion_r569095964" expanded>

The name 'print' might be overused here - maybe can consider just renaming to lineWithNewLine or even better, have a static UI class! Then you can just UI.lineWithNewLine
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/21#discussion_r569096412" expanded>

Perhaps instead of naming the String arg. line, maybe can call it userInput?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/21#discussion_r569096608" expanded>

Perhaps can be more specific about the naming - rename to taskNumber, perhaps?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/21#discussion_r569097006" expanded>

Hmm maybe rename to eventDate?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/21#discussion_r569097277" expanded>

Perhaps can rename to deadlineDueDate?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/15#discussion_r569091466" expanded>

perhaps can consider renaming to endProgram() - more succinct :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/15#discussion_r569093111" expanded>

Perhaps renaming all the MESSAGEs to lead with the noun first? e.g. MESSAGE_ERROR and MESSAGE_LIST_FULL
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/15#discussion_r569094381" expanded>

Maybe can consider renaming to MAX_ENTRY_LENGTH? This can apply to all the classes of Task, right?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/15#discussion_r569094791" expanded>

Nice that you have a help function!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/15#discussion_r569094919" expanded>

Good class names - follows coding standards but maybe can just call it ToDo instead?
</panel>

</panel>

<panel type="info" header="### 26. NG C.. HUI `@Chihui8199` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569095995" expanded>

Yups, if should have curly brackets even If it's a one-liner
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569096734" expanded>

comments should be indented relative to their position in the code
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569100181" expanded>

perhaps u can create a Ui class to hold all the things you want to print
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569095101" expanded>

Abided by the coding standards, well done!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569095507" expanded>

Good java coding standard
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569097521" expanded>

I like the way that you declare a constant here to make the code clean! And good job remembering the format. Most of us would just forget it.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569097812" expanded>

good job on importing only what u need
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569098139" expanded>

I noticed that you use inheritance for all the other subclasses and it's clean and easy to read for each individual subclass. Keep up the good work!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569100720" expanded>

perhaps can create a Ui class to hold the things you want to print I.e greetings, divider etc
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/12#discussion_r569101862" expanded>

Good job on using constants
</panel>

</panel>

<panel type="info" header="### 27. TAN .. JUN `@LJ-37` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/56#discussion_r569059147" expanded>

Inconsistent spacing with regards to operator. Should be 1 spacing before and after operator.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/56#discussion_r569060485" expanded>

Can be split into more lines to improve readability.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/56#discussion_r569061494" expanded>

Inconsistent format for naming constants, some have _ in between words but not this time.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/56#discussion_r569062461" expanded>

Inconsistent spacing before and after commas.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/56#discussion_r569063218" expanded>

Spacing after if.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/32#discussion_r569054148" expanded>

Should have spacing before and after operator.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/32#discussion_r569055574" expanded>

Variable name can be more descriptive, ind maybe too vague.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/32#discussion_r569056175" expanded>

Variable name can be more descriptive, cmd maybe too vague.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/32#discussion_r569056606" expanded>

spacing before and after operator.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/32#discussion_r569057050" expanded>

Good job putting comments.
</panel>

</panel>

<panel type="info" header="### 28. LEE ..ANDY `@LeeHanYongAndy` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/40#discussion_r569048418" expanded>

This part is good as many tends to forget the point on keeping your single line of code short (lesser than 120). This also makes it very readable.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/40#discussion_r569048836" expanded>

It better to have a space after the (true) for consistency
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/40#discussion_r569049087" expanded>

there is no need for a blank line (i think?)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/40#discussion_r569049483" expanded>

extra space after the (content), you might want to consider to remove?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/40#discussion_r569049876" expanded>

maybe it is just me but maybe you can try to avoid the nested if else loop if possible? (the arrowhead thing)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/40#discussion_r569050087" expanded>

There is some multiple blank line. (maybe you might want to remove it?)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/11#discussion_r569054329" expanded>

not sure but java coding standards mentioned something on the .equals. Not too sure if this applies to your case.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/11#discussion_r569055026" expanded>

Maybe you can consider if you want to change from if else to switch statements? such that your default will return null.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/11#discussion_r569058830" expanded>

Maybe this can be done by the constructor? assigning of value to the variable taskCount
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/11#discussion_r569059978" expanded>

Maybe you might want to use constant for the keywords? Such that any future changes to the keywords can be edited easily. (not too sure)
</panel>

</panel>

<panel type="info" header="### 29. HAZE.. TAN `@hazelhedmine` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/100#discussion_r570755826" expanded>

Perhaps you could consider starting the { bracket from the same line as the while loop instead? By following the coding standards, this could help increase the readability of your code. I noticed this issue in some other lines too, for example your if-else and for loops.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/100#discussion_r570756241" expanded>

I like how you used newlines to section the different parts of your code, it gives your code a more organized structure and hence enhances readability.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/100#discussion_r570756769" expanded>

Perhaps you could consider assigning "        " to a constant variable instead? I noticed you use this several times in your code hence naming it as a variable could enhance readability.         
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/100#discussion_r570759014" expanded>

I like your variable names, they clearly state the use of the variable which increases your code readability!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/100#discussion_r570759923" expanded>

I like the logical structure of your code, it makes it easy to follow and identify the different parts. I think that your code is clear and readable.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570641397" expanded>

I like how you separated the sections in your code with a new line as the clear structure increases code readability.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570645182" expanded>

I like how you stored the length of the words as constants as it makes your main code easier to read.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570647126" expanded>

Should this be "tasks" instead of "tasksList" as it is representing a collection of objects?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570652286" expanded>

Perhaps you could consider separating "TODO_DONE_LENGTH" to two separate constants of "TODO_LENGTH" and "DONE_LENGTH"? This may increase code readability. I noticed the similar naming style in line 8 of your code.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/46#discussion_r570653452" expanded>

Perhaps you could name this as printHorizontalLine instead? This may increase your code readability since printLine may be misleading as in line 19 you named your user command as "line".
</panel>

</panel>

<panel type="info" header="### 30. RAVI..HILA `@nivikcivik` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/54#discussion_r570801758" expanded>

Hey since you repeat the "Alright, I've added this task..." statement for all 3 types of tasks, maybe you want to create a separate method like "printAddedTask" and print the statements from there? you can also update the value of numberOfTasks within the method as well since it is common for all 3 types of tasks:)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/54#discussion_r570803782" expanded>

since the "case "todo": " and "default" have the same contents, maybe you can keep just one of them? this would make it shorter and more readable in my opinion:) but if you have different meanings for the two of them that's fine, but generally I cannot find any code violations:))
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/54#discussion_r570932533" expanded>

perhaps this could be in small caps? you could use camelCase convention:)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/54#discussion_r570932869" expanded>

I think "LOGO" can also be in small caps:)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/54#discussion_r570933473" expanded>

maybe instead of tokens you can use something like "partsOfCommand"? I think it can be more descriptive, but otherwise I see no other issues:) your code is so neat and well-written:)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/2#discussion_r570640882" expanded>

maybe could be more descriptive? like "taskDone", etc.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/2#discussion_r570641413" expanded>

since the "i" here means something, maybe it can be named as "index" or something more meaningful
Generally, I couldn't find much coding violations! It looks very neat:)
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/2#discussion_r570642530" expanded>

maybe "line" can be replaced with "dottedLine"? I was a bit confused as to what this was referring to.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/2#discussion_r570798583" expanded>

maybe you could bring the catch statement to the } bracket of your try statement ( like "} catch (...) {" ) I think that is a violation that you could change:)
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/2#discussion_r570798930" expanded>

again here you should move the catch statement to the brackets, but otherwise I can't see any issues:)
</panel>

</panel>

<panel type="info" header="### 31. KWEK..SHUN `@MingShun98` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/67#discussion_r570645653" expanded>

Small Typo I think you meant getTaskIndex, not a big issue.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/67#discussion_r570944757" expanded>

Similarly, the array name of Doby would be clearer if its DoBy.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/67#discussion_r570950804" expanded>

i think inputParts since its an array, also I think the name might be little confusing, pershaps another clearer name would be preferred
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/67#discussion_r570951256" expanded>

Consistent indentation for the a long System.out statement. 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/67#discussion_r570952915" expanded>

spacing in between methods could be more consistent , makes the code longer than it has to be
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/2#discussion_r570964171" expanded>

constant terms should be named in all caps, a different name would be also preferrable
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/2#discussion_r570965406" expanded>

a different preferred like printBye would be better since the variable name may be confusing in the above method
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/2#discussion_r570965760" expanded>

a different variable name could be used instead of t, may lead to confusion further along the code
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/2#discussion_r570966368" expanded>

the indentation for try and catch should be
try{
} catch {
}
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/2#discussion_r570967131" expanded>

for indentation leave one line in between methods for shorter code 
</panel>

</panel>

<panel type="info" header="### 32. VIKA..LANI `@vvvvh123` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/66#discussion_r570650965" expanded>

I like how you extracted the various System out print methods into a separate class
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/66#discussion_r570652658" expanded>

I don't think you are using this method anywhere. Perhaps it can be removed?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/66#discussion_r570652986" expanded>

I like the naming of this variable; very clear what it is referring to
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/66#discussion_r570653676" expanded>

Perhaps you could consider adding constants to extract out the magic numbers (4 & 9)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/66#discussion_r570653786" expanded>

Perhaps you could consider adding constants to extract out the magic numbers (6)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/30#discussion_r570644649" expanded>

I like the naming of this boolean variable; very clear. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/30#discussion_r570647001" expanded>

Great job using the plural form to represent a collection of objects
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/30#discussion_r570648505" expanded>

Perhaps put the else-if line on the same line as the closing bracket of the if-statement (this would follow our coding standards). 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/30#discussion_r570648698" expanded>

Perhaps put the else-if line on the same line as the closing bracket of the else if-statement (this would follow our coding standards).
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/30#discussion_r570649338" expanded>

Perhaps put the else line on the same line as the closing bracket of the else if-statement (this would follow our coding standards).
</panel>

</panel>

<panel type="info" header="### 33. HO W..NLEY `@beaniestanley` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/86#discussion_r570685515" expanded>

"lists" as a variable name is too general, the variable should be representing a collection of objects like "taskList"
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/86#discussion_r570686750" expanded>

Since this method is used throughout your code, perhaps create a method that you can call instead of repeating the code?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/86#discussion_r570687279" expanded>

Naming can be more specific instead of using 't' since this variable is being used frequently
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/86#discussion_r570688909" expanded>

Todo, Deadline and Event classes are missing, do remember to upload their .java files!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/86#discussion_r570690107" expanded>

"word" might not be appropriate as it is an input of string that may be a phrase/sentence. Maybe use "userInput"?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/26#discussion_r570681893" expanded>

Missing a space between ) and { 

</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/26#discussion_r570682419" expanded>

Good to use a class file to handle all the printing of lines and commands!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/26#discussion_r570693063" expanded>

Extra indentation for case not required!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/26#discussion_r570697854" expanded>

"default" case is missing
</panel>

</panel>

<panel type="info" header="### 34. GOH ..RYNA `@brynagoh` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/35#discussion_r569992426" expanded>

As this method seems to be longer, maybe abstract the logic for each case into separate methods? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/35#discussion_r569994712" expanded>

Maybe define a constant for the line?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/35#discussion_r569995007" expanded>

Maybe a more intuitive method name? 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/35#discussion_r569996551" expanded>

Maybe define constants holding "X" or " "?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/35#discussion_r569997281" expanded>

Would displayTaskList be more intuitive? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569910056" expanded>

Maybe a more intuitive name for "split"? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569911950" expanded>

Should the formatting indentation "  " be defined as a constant?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569914860" expanded>

I agree! The clear and standardised method names make it easy to follow.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569916202" expanded>

As this will show the Task status and Task type as well, should descriptionCount be named more intuitively?
</panel>

</panel>

<panel type="info" header="### 35. SEE .. HAN `@BlubberMonster` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570924844" expanded>

Perhaps you can insert a space between the '}' and "while"? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570926920" expanded>

I like that you modularize your program. It definitely increases the readability.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570928931" expanded>

Perhaps you might consider putting this method in another class ?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570934416" expanded>

You can consider deleting the lines here.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570935353" expanded>

I like how you used meaningful words to name your parameters.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/84#discussion_r570643232" expanded>

Should we import the entire class? Perhaps it would be better to specify the specific class that you are going to use? I have noticed this issue in one other place as well.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/84#discussion_r570726765" expanded>

What does str mean? Maybe you can rename the variable to something more meaningful?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/84#discussion_r570731091" expanded>

Perhaps you can consider putting this under a new method, hello, as this might increase readability?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/84#discussion_r570731811" expanded>

Perhaps you can rename part as parts since it is plural(part[0] and part[1])?
</panel>

</panel>

<panel type="info" header="### 36. H MO..SAIN `@hussain1998` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/97#discussion_r569886406" expanded>

I think the main method is too long and we can maybe refactor the code to make main shorter. According to our prof, it should "tell a story"
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/97#discussion_r569886805" expanded>

Try to avoid deep nesting. There are many while and if conditions being nested.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/97#discussion_r569887408" expanded>

I feel this line, the expression is complicated
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/97#discussion_r569887596" expanded>

Try to avoid magic numbers
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/95#discussion_r569881530" expanded>

Maybe the comment can be removed, as we are not using it in the code.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/95#discussion_r569882296" expanded>

Consider removing indentations for the case clauses. (It violates coding standard)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/95#discussion_r569882634" expanded>

Consider removing the logo variable can be deleted. (It is not used in the rest of the code)
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/95#discussion_r569884445" expanded>

Maybe it is better to remove the extra line spacings.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/95#discussion_r569885098" expanded>

Good to state @Override!
</panel>

</panel>

<panel type="info" header="### 37. LIM ..FENG `@limwenfeng` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569886055" expanded>

the code is structured logically and sequentially, good job
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569886537" expanded>

consider applying SLAP principle
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569886738" expanded>

no deep nesting found, good job
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569887065" expanded>

consider using SLAP to improve the understandability of Duke.java
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/44#discussion_r569881447" expanded>

there might be a better variable than "by", as it might not be intuitive
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/44#discussion_r569881985" expanded>

can consider extracting this method as listOutTasks()
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/44#discussion_r569883167" expanded>

consider extracting these lines as a method 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/44#discussion_r569883928" expanded>

is it supposed to be "done 1"?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/44#discussion_r569884553" expanded>

overall, consider applying SLAP principle, it would improve the overall readability of this code.
</panel>

</panel>

<panel type="info" header="### 38. TAN ..XERN `@tzexern` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/61#discussion_r569050254" expanded>

Good use of Camel Case naming as it's easy to identify the methods and variables
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/61#discussion_r569053142" expanded>

Hi, splitting the user input is a great idea! 
I was thinking maybe if a more explanatory array name used to store the output will work better :)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/61#discussion_r569055153" expanded>

The aforementioned switch case formatting is done and adhered to. Great!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/61#discussion_r569057736" expanded>

Hi, it's great that an object array is created.
However, I believe that magic numbers should be replaced with an appropriate name to better identify them according to the coding standards.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/61#discussion_r569059175" expanded>

Hi good job on the codes.
If I remember correctly, Prof mentioned that it's better to leave an empty line at the of all the files :)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/59#discussion_r569135079" expanded>

I like how you refactor your codes to increase the readability.
The code is neat and really easy to understand.
This can be seen in other parts of your code as well.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/59#discussion_r569137133" expanded>

Clear and concise comments can be found in several parts of your code.
Good job
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/59#discussion_r569137447" expanded>

SLAP can be seen here which is commendable.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/59#discussion_r569138703" expanded>

I like how the used methods are subsequently ordered to increase the readability
</panel>

</panel>

<panel type="info" header="### 39. MARK..EONG `@marklowsk` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/60#discussion_r569098000" expanded>

I like how you had refactored the methods in this way.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/60#discussion_r569098545" expanded>

Hi, I feel you can convert the commands into class-level constants.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/60#discussion_r569100719" expanded>

I like it that you created a UI class. This makes the code very neat.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/60#discussion_r569102123" expanded>

100 can be converted into a constant to avoid magic number.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/60#discussion_r569103538" expanded>

I like how you separated the task functions in to a TaskManager class. Code is structured logically.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/18#discussion_r569076508" expanded>

I have noticed from some of your methods and classes have the the space before the curly brace missing.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/18#discussion_r569086808" expanded>

The if statement should have a spacing before the brackets (condition statement) like the while statement.
I noticed the same issue in several other places too.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/18#discussion_r569088618" expanded>

Overall, I like that you have camelCased your method and variable names consistently.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/18#discussion_r569089795" expanded>

Overall, all comments appear in the right position of your code. Good following of the standard.
</panel>

</panel>

<panel type="info" header="### 40. LIU ..OHAO `@fsgmhoward` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/48#discussion_r568385935" expanded>

I feel this can use `+` to connect strings to avoid multiple calls to System.out.println(), like this:
```
String helpString = "HELP PAGE" + NEWLINE
        + "All valid commands:" + NEWLINE + NEWLINE
        + ....
```
And you declared `NEWLINE` but you sometimes didn't use it (e.g. here)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/48#discussion_r568388139" expanded>

Naming: `isDeadlineOrEvent` should be more appropriate as you are checking whether tokens match the pattern of deadline or event. Or alternatively, naming it as `hasKeyword` is also fine in my opinion.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/48#discussion_r568604666" expanded>

a single line user input is processed in different functions (different levels of abstraction) [REF](https://nus-cs2113-ay2021s2.github.io/website/se-book-adapted/chapters/codeQuality.html#slap-hard)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/48#discussion_r568605148" expanded>

Declared `NEWLINE` but not used here.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/48#discussion_r568607147" expanded>

For each function there is repeat `System.out.println(BORDER);`
Maybe this can be moved to before Duke.c#L189 and after Duke.c#L196, since anyway these two will be printed each time an input is received?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/23#discussion_r568375075" expanded>

`MAX_SIZE` is a constant so you can consider mark it with `final`.
`LIST_COUNTER` is not a constant so you might want to name it using camelCase, i.e. `listCounter`.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/23#discussion_r568375913" expanded>

I would suggest use constants or enum to represent these error codes (as they are magic numbers).
It is hard to read from code if something like `error(5)` is written.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/23#discussion_r568378750" expanded>

The `case` should be on a same indentation level as `switch`.  You might want to refer to the coding standard's `The switch statement should have the following form` section.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/23#discussion_r568379939" expanded>

You might want to change indentation for wrapped lines to be 8 spaces. Please refer to standard's `Indentation for wrapped lines should be 8 spaces` section. (same applies to all wrapped lines below)
</panel>

</panel>

<panel type="info" header="### 41. ALIC.. TAY `@aliciatay-zls` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/61#discussion_r569153570" expanded>

Some code duplication (here and lines 71-76), maybe these common parts can be extracted as a separate printTask() method? (DRY principle)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/61#discussion_r569154554" expanded>

I think you could consider making this variable name be longer so that it can be more self-explanatory? (for example is it "at" somewhere or "at" a certain timing)

Similarly for "sc" at line 25 in Duke and "by" in Deadline perhaps!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/61#discussion_r569166662" expanded>

Nice work on the clear-cut names of the methods! However the comment here is not very clear, maybe "X" and " " can be declared as constant variables of Task instead of being printed straightaway?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/61#discussion_r569176913" expanded>

I like that this method is self-contained and that the logic flows nicely. Maybe the only thing would be that it is quite long, so maybe more abstraction can be done to separate the code into methods that are then called here (SLAP hard)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569048421" expanded>

Maybe line wrapping could be done for long lines like this one?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569049300" expanded>

I think the import statement can be more specific?
[https://se-education.org/guides/conventions/java/basic.html#package-and-import-statements](url)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569052941" expanded>

I like how you concatenated these strings into a single "userQueryReturn" String object instead of doing multiple System.out.println() :) Only one thing is that maybe for line 21 the variable results can be broken up into intermediate ones so that what is being output looks clearer?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569056403" expanded>

I think these comments could be deleted if they are no longer needed? I like to keep these code fragments too in case I need them later, but recently I have been doing it in a separate draft document instead.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/37#discussion_r569058407" expanded>

Perhaps processing input could be in a separate method?
</panel>

</panel>

<panel type="info" header="### 42. ONG ..HENG `@ongweisheng` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/88#discussion_r569882133" expanded>

Use better boolean variable names
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/88#discussion_r569883921" expanded>

Use better boolean variable names e.g. if (CheckIfInteger) does sound right.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/88#discussion_r569885701" expanded>

Maybe create a method within each case to make the code neater
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/88#discussion_r569886062" expanded>

Good implementation of wrong format for input
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/72#discussion_r569890329" expanded>

Firstly, i think you can have more commits to better show your updates and improve on your commit name/message
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/72#discussion_r569890640" expanded>

Perharps you can just create the string for the horizontal line using a method instead of a for loop to print our _ 25 times
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/72#discussion_r569891351" expanded>

Maybe use switch case to split up your task and use methods to handle the task required to keep the code clean
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/72#discussion_r569891648" expanded>

Same comment as above so as to avoid confusing nested loops and improve code clarity
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/72#discussion_r569892335" expanded>

Secondly, not using classes as recommended for the iP for Task, Todo, Deadline, Event etc. 
</panel>

</panel>

<panel type="info" header="### 43. FARM.. HAO `@FarmZH98` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/48#discussion_r569093141" expanded>

I like how you made the options very clear and straightforward.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/48#discussion_r569095242" expanded>

Well done in using all uppercase and underscore to separate words in constant names
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/48#discussion_r569096088" expanded>

I think the namings are not entirely clear, for example can the "type" be named as "classType" instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/48#discussion_r569096778" expanded>

I like how the function is named to sound like booleans.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/29#discussion_r569100157" expanded>

Would it be better if you tweak the code slightly so that you can extract methods to avoid duplicate codes?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/29#discussion_r569101830" expanded>

I think the variable Task "t" should have a proper name instead of an alphabet. This is similar to the ones below too.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/29#discussion_r569102293" expanded>

Should the else statement be at the same line as the curly bracket of the if statement?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/29#discussion_r569104072" expanded>

I think this can be extracted out to form a method so others can have more clarity on what is going on
</panel>

</panel>

<panel type="info" header="### 44. YEUN..SENG `@JoviYeung92` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/91#discussion_r569907897" expanded>

maybe the name split here can change to splitSentence
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/91#discussion_r569909919" expanded>

well indented switch case over here :)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/91#discussion_r569919402" expanded>

well indented do while loop :)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/91#discussion_r569922100" expanded>

since 'i' is the number of entry number maybe you can create a variable name "numTask" . If you are using the standard forloop the it is fine to use 'i'. Standard forloop i mean (int i; i&gt;a; i++)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/73#discussion_r569914895" expanded>

Hi !! this method is too long, it would be better if you create another class for it :)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/73#discussion_r569924341" expanded>

well indented while loop :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/73#discussion_r569926965" expanded>

well indented if else loop :)
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/73#discussion_r569929262" expanded>

This method name can be change to "printStatus" to be more descriptive :)
</panel>

</panel>

<panel type="info" header="### 45. LI H..YANG `@lihaoyangML` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570686722" expanded>

I think you have put an extra indentation for all 'case'
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570688286" expanded>

I think it may be better to avoid complicated expressions if possible.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570689102" expanded>

perhaps it may be better to use an action verb such as displayTaskAdded?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/101#discussion_r570689157" expanded>

perhaps it may be better to use an action verb such as displayTaskCompleted?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/52#discussion_r570682336" expanded>

It may be better to use upper case for all constants and use underscore to seperate words
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/52#discussion_r570683945" expanded>

I think there is an extra indentation for all 'case' within the switch statement.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/52#discussion_r570684119" expanded>

I think there is an extra indentation for all 'case' in the switch statement
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/52#discussion_r570685583" expanded>

perhaps it is better to put )) at the previous line? I am not too sure about this actually.
</panel>

</panel>

<panel type="info" header="### 46. GE Z..OYAN `@geezzzyyy` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569911240" expanded>

It is good to use enums.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569911406" expanded>

Try avoid using magic numbers
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569911606" expanded>

It is good to refactor these functionalities
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569911735" expanded>

It is good to specify overridden methods
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/16#discussion_r569906420" expanded>

It is a good practice to name an array as plural
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/16#discussion_r569908931" expanded>

It is a good practice to name a boolean variable like this.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/16#discussion_r569910000" expanded>

The uppercase naming format should be used for constants only.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/16#discussion_r569910770" expanded>

It is a good practice to list all imported classes explicitly
</panel>

</panel>

<panel type="info" header="### 47. LIU ..QIAN `@lowwilliam` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570682453" expanded>

Can leave one line space between two boxes of codes!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570682785" expanded>

Can delete the useless comments code
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570683323" expanded>

can change i to some words meaningful
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570683592" expanded>

Can delete this empty line
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570684715" expanded>

No need to leave space between these
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570685057" expanded>

good use of naming and Class with super
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570685610" expanded>

This is a very clear structure of code, I will also apply this in mine
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570687388" expanded>

I like the usage of a different form of lines, one:----- and one––––––––, it performs different meanings and let users easily understood.
</panel>

</panel>

<panel type="info" header="### 48. DAI ..CHAO `@baggiiiie` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570686818" expanded>

Could modify so that it is not case-sensitive

</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570688094" expanded>

Good to check if the list is empty before printing out the list!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570688816" expanded>

could make a method to add task make code neater!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570689614" expanded>

userInput.indexOf("/at")+4 could be confusing
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/26#discussion_r570691113" expanded>

logo and greeting could be included in one method, make code cleaner!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/26#discussion_r570693657" expanded>

Good use of secondscan to retrieve next integer
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/26#discussion_r570693960" expanded>

a "default" for illegal input would be good
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/26#discussion_r570694326" expanded>

though if it's not an integer it would raise an error
</panel>

</panel>

<panel type="info" header="### 49. TAO ..YUAN `@Tyuanyuan` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/97#discussion_r569911762" expanded>

maybe change a better name for task array?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/97#discussion_r569912247" expanded>

Maybe it's better to try to use more methods.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/97#discussion_r569913112" expanded>

Maybe make this into a method instead of printing a line every time?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/97#discussion_r569913513" expanded>

It's better to make the formatting clearer.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/80#discussion_r569907774" expanded>

I think it is very good to create variables for messages.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/80#discussion_r569908442" expanded>

It's very good use of inheritance.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/80#discussion_r569909113" expanded>

According to naming standard, perhaps better be 'description'?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/80#discussion_r569910447" expanded>

Better start with a lowercase letter for integer variable?
</panel>

</panel>

<panel type="info" header="### 50. YAN .. XUE `@yyixue` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/40#discussion_r569089723" expanded>

for consistency, maybe add a blankline after case "bye" too?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/40#discussion_r569091285" expanded>

Is this blank line after the close bracket of the while loop needed?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/40#discussion_r569092234" expanded>

Maybe the number of blank lines at the start and end of each case can be consistent?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/40#discussion_r569094588" expanded>

i like how you have included error handlings even though it has not yet been specified in the weekly project requirements
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/19#discussion_r569094237" expanded>

maybe this boolean variables can be named to sound more like a boolean? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/19#discussion_r569095024" expanded>

is this blank line here needed?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/19#discussion_r569096305" expanded>

is this an if-else-catch block? not sure if there is supposed to be a catch at the end of the if-else block
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/19#discussion_r569097219" expanded>

i like how you added error handling for input of the index
</panel>

</panel>

<panel type="info" header="### 51. CAO ..UWEN `@cswbibibi` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/92#discussion_r569905002" expanded>

Avoid magic number 100
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/92#discussion_r569905401" expanded>

Good readability
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/92#discussion_r569908566" expanded>

else if is at the wrong line
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/92#discussion_r569909321" expanded>

wrong line for all the else if and else
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569910035" expanded>

Shouldn't it be "Duke"?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569910348" expanded>

update taskNumber can be rewrite as a function to avoid repetition
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569911023" expanded>

Im sorry but you don't have to delete this right
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569912196" expanded>

100 is a magic number, try to change to something else
</panel>

</panel>

<panel type="info" header="### 52. LAM .. FAH `@lamzf1998` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/56#discussion_r569094415" expanded>

Spacings between the operators are rather inconsistent and can affect readability of the code. Try adding spaces before and after the operators.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/56#discussion_r569095133" expanded>

Good that you import only the libraries that you require.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/56#discussion_r569096399" expanded>

Inconsistent spacing between parentheses ( and { , as well as for the comma.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/56#discussion_r569096975" expanded>

If I remember correctly from the course learning materials, if-else statements should have the form:

if (condition) {
    statements;
} else {
    statements;
}
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569093280" expanded>

Its good that you import only the necessary libraries required.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569099240" expanded>

The codes does not have any deep nesting complications.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569099283" expanded>

Spacings are very consistent and the method names are simple yet understandable.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/10#discussion_r569100309" expanded>

No redundant methods are introduced.
</panel>

</panel>

<panel type="info" header="### 53. JUST..YING `@justinaquak` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570682033" expanded>

Try to put these in another class
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570682234" expanded>

consider using switch statement?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570683548" expanded>

This is good! but maybe can be part of another class like UI.class? :-)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570685657" expanded>

i dont rly understand what is happening but its best not to hardcode these values :-)

</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r570686324" expanded>

nice! variation in the messages haha
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r570687205" expanded>

consider making it case insensitive ? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r570687750" expanded>

try to put more methods in another class? like this printBye method can be in a UI.class maybe
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r570688666" expanded>

consider using a switch case statement! but also i like how this should work as long as the command word is in the text!
</panel>

</panel>

<panel type="info" header="### 54. GOH ..SEAN `@seangoats` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/49#discussion_r569087504" expanded>

Maybe can change to constant (final static) since logo is not expected to change
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/49#discussion_r569089703" expanded>

Should have spacing between the  for loops conditions and operators line 38 and 48.
E.g. for (int i = 0; i &gt; allTasks.length; i++) { ...
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/49#discussion_r569090634" expanded>

Might be good to create variables so it is clearer what the different parts of actionArr refer to.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/49#discussion_r569091280" expanded>

Possibly rename the boolean to isDone (based on module's coding standards)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/49#discussion_r569092048" expanded>

Conditional should be on separate line and should wrap single statement in curly brackets (based on module's coding standards)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/19#discussion_r569093646" expanded>

The method name might be a little vague, can consider renaming the method so that it is more clear what it does.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/19#discussion_r569094898" expanded>

Can consider renaming these methods as the naming does not really signify what the method does
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/19#discussion_r569098177" expanded>

Is the use of String.join() necessary here? Unless I'm missing something, it is possible to achieve the same result by just indexing the arguments array
</panel>

</panel>

<panel type="info" header="### 55. LOW ..LVIN `@e0699194` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/57#discussion_r569091007" expanded>

Great job importing only the libraries you need!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/57#discussion_r569092652" expanded>

Maybe it will be better to use a CONSTANT variable for the value 100.  This would help readers understand the significance of the value :)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/57#discussion_r569095067" expanded>

Very good to create a new class for code with high reusability.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/57#discussion_r569095568" expanded>

Good use of camel case, very easy to identify variables and methods.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/27#discussion_r569096839" expanded>

Good use of switch case
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/27#discussion_r569097216" expanded>

Can avoid the magic number 100 by introducing a named constant 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/27#discussion_r569097944" expanded>

Good use of a constant
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/27#discussion_r569098223" expanded>

Methods are short and readable. Good job!
</panel>

</panel>

<panel type="info" header="### 56. LOK .. WEN `@kewenlok` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569048625" expanded>

Great job separating longer lines into two lines.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569049248" expanded>

I believe the conditional should be placed at a separate line and wrapped with curly brackets.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569050439" expanded>

It is recommended to place a comment on top of the statement it is referring to for clarity purpose.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/65#discussion_r569054721" expanded>

It is a good practice to initialize variable whenever it is declared.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/55#discussion_r569061076" expanded>

Scope of a variable should be minimised. Since scanner is only used in one part of the code, it is best to make it a local variable rather than a global one.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/55#discussion_r569066528" expanded>

I like the fact that you have gone ahead of the class and created javadoc for most of the methods, it lets me follow through the code easily.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/55#discussion_r569069497" expanded>

You might want to implement a setDone setter method in the task class to change the isDone variable. The class level variable should be accessed and modified by setter and getter method within the class.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/55#discussion_r569074901" expanded>

I think it is better to separate the conditional statements into multiple individual ones and make the main code of assigning the readFromIndex value more prominent for easier management and readability.
</panel>

</panel>

<panel type="info" header="### 57. CHOI..NJAE `@wjchoi0712` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569882496" expanded>

maybe change the getDone to isDone to match the boolean method
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569883433" expanded>

Consider changing the variable name to be more specific. (eg. taskCounter)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569883677" expanded>

It will be nice if line spacing is consistent
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569884853" expanded>

good job on explaining each line for clarity
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/44#discussion_r569885779" expanded>

perhaps you can add "final" to say that it is a constant
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/44#discussion_r569886019" expanded>

Consider adding comments to explain each method
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/44#discussion_r569886590" expanded>

Consider adding this line into the constant list (eg. final String taskNo = " Now you have %d tasks in the list" and use string format
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/44#discussion_r569887360" expanded>

Perhaps you can add new methods to remove repeated lines in the code
</panel>

</panel>

<panel type="info" header="### 58. ALEX..N AN `@AlexanderTanJunAn` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570656333" expanded>

Although its a small variable, names should be in camelCase
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570656522" expanded>

camelCase here too!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570656920" expanded>

Methods should be written in camelCase as well
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/102#discussion_r570657132" expanded>

Collection of tasks should be in plural form i.e lists
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570645935" expanded>

Naming of boolean variable is very readable. Very good!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570646593" expanded>

Good use of method overriding, allows Event class to inherit from parent Task class. Very good!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570647506" expanded>

If else statements should follow proper code standards! Small issue as the other statements follow them.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r570649108" expanded>

Collection of tasks is in plural form! Good!
</panel>

</panel>

<panel type="info" header="### 59. A AK..AMED `@iamakilahamed` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569883939" expanded>

Consider removing commented parts of the code if they are not in use
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569885111" expanded>

Good job in having short and clear methods
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569885312" expanded>

Good job looks neat and clean
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569886132" expanded>

Overall, good job. Naming of variables and methods are self explanatory.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569887503" expanded>

Good java doc comments
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569888064" expanded>

Consider removing parts of the code that are not in use
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569888400" expanded>

Good job. Clean and neat
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569889338" expanded>

Good use of methods. Makes the entire code readable and neat
</panel>

</panel>

<panel type="info" header="### 60. SOE .. ZAW `@soepaingzaw` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/83#discussion_r570006791" expanded>

Good work in wrapping of lines and indentation of 8 spaces
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/83#discussion_r570008250" expanded>

Good if-else block form. Perhaps adding spaces can help increase readability
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/83#discussion_r570013254" expanded>

Might be a typo due to extra space
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/83#discussion_r570014803" expanded>

Good explicit listing of imported classes
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/3#discussion_r569889375" expanded>

Code looks good. For this, I think you can use for loops to generate the line, either that or to wrap the line around as it is very lengthy
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/3#discussion_r569926801" expanded>

good and consistent use of camel cases
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/3#discussion_r569926847" expanded>

good use of classes as recommended . Well done!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/3#discussion_r569926871" expanded>

Good form of if-else block
</panel>

</panel>

<panel type="info" header="### 61. IVAN..A AN `@sarzorwyn` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569881380" expanded>

Good use of the SLAP principle
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569882668" expanded>

Consider splitting function in half to improve readability
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569885167" expanded>

Automated testing is well set up
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/50#discussion_r569885706" expanded>

Good use of polymorphism 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569886880" expanded>

Substring uses magic numbers, could try using length of the commands instead
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569887519" expanded>

Printing out the task can be made into a new method to avoid repetition
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569887941" expanded>

Good use of super and override
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/24#discussion_r569888298" expanded>

Good use of abstracting out the method
</panel>

</panel>

<panel type="info" header="### 62. LI K..XUAN `@Cocokkkk` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/92#discussion_r569884169" expanded>

Looks good!
But It's better to pay attention to the code standard for the if statement. Can add one more space between the if and the left bracket before the condition.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/92#discussion_r569887990" expanded>

Looks like a good subclass. 
You did a good job to use inheritance to simplify the main code.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/92#discussion_r569894642" expanded>

Looks good, but need to pay attention to the code standard. 
It's better to add a space between the Task and [ ]. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/92#discussion_r569895607" expanded>

For the if-else statement, it would be better to follow the code standard requirement. 
eg. Between If and left bracket to need a space and else if should inline with the "}". 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/78#discussion_r569890029" expanded>

Looks good! 
It's better to use a simpler variable name for the startTimeMarker.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/78#discussion_r569890774" expanded>

It's good to use an enum method. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/78#discussion_r569891412" expanded>

You're so creative to have emotion icons in the greeting message! 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/78#discussion_r569892413" expanded>

It's would look better if can add a space between the double quotation mark. eg." "
</panel>

</panel>

<panel type="info" header="### 63. BUND..RISH `@H-horizon` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/58#discussion_r569050582" expanded>

I like that you have used a constant to store the Divider. You can try implementing a method to print the Divider. In that way, you will only need to call the method instead of typing System.out.println(Divider)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/58#discussion_r569053111" expanded>

I like that you only used abstractions for this method. It makes it easy to read and understand.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/58#discussion_r569060363" expanded>

Good job! You did not violate any coding standard.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/58#discussion_r569062716" expanded>

I think you should consider using a constant to declare the array. It will improve your code quality.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/38#discussion_r573476190" expanded>

It is good that you have only imported packages you need.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/38#discussion_r573476681" expanded>

Good job using a constant instead of a magic number.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/38#discussion_r573477968" expanded>

I like that you've used switch structure instead of nested if structure. You have avoided arrowhead!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/38#discussion_r573480179" expanded>

Good job implementing your Automated Text UI Testing.
</panel>

</panel>

<panel type="info" header="### 64. RIZA..HMAN `@Rizavur` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/71#discussion_r569882626" expanded>

I think it might be better to name 'inputArray' as 'inputs' instead.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/71#discussion_r569884722" expanded>

Good job. Clear naming of methods.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/71#discussion_r569885296" expanded>

Maybe you can consider splitting this if else statements as they seem very nested.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/71#discussion_r569885710" expanded>

Nice job. Clear naming of variable.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569886607" expanded>

Maybe you can consider using Enum for these constants.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569886979" expanded>

Good use of inheritance.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569887359" expanded>

Good extraction of method.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/20#discussion_r569888010" expanded>

Good use of calling methods to make things clearer.
</panel>

</panel>

<panel type="info" header="### 65. SIM ..OWEN `@SimBowen` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/83#discussion_r569882853" expanded>

Good job. Clean and clear naming of methods
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/83#discussion_r569883504" expanded>

Consider extracting out command parsing into a method on its own.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/83#discussion_r569885104" expanded>

Good job. Clear naming of constant variables.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/83#discussion_r569885726" expanded>

Good Job. I like how you split the print out from main.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569886248" expanded>

Consider splitting out command parsing into its own method
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569886819" expanded>

Well done. Expression is simple and readable.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569887176" expanded>

Well done. Methods are short and sweet and clear in what they do.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569887343" expanded>

Well done. Name clearly explains what methods do.
</panel>

</panel>

<panel type="info" header="### 66. TAY ..RLEY `@KimIdeas8` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569882004" expanded>

Can consider putting "ToDo" in pascalCase
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569883188" expanded>

Can consider declaring the constant '5'. I've found the same issue in some other places as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/89#discussion_r569886027" expanded>

Can consider refactoring "sign_off" as signOff since variable names are in camelCase.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/7#discussion_r569888708" expanded>

Can consider putting printed stuff in a method.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/7#discussion_r569889299" expanded>

I've noticed the same issue in other places too
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/7#discussion_r569889607" expanded>

Consider spelling out the whole word 'elem'
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/7#discussion_r569889719" expanded>

Consider spelling out the class name
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/7#discussion_r569889916" expanded>

can put 'todo'in PascalCase
</panel>

</panel>

<panel type="info" header="### 67. QIU .. WEN `@e00426142` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/81#discussion_r569884503" expanded>

consider a better variable name for out
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/81#discussion_r569885919" expanded>

consider no indentation for case clauses.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/81#discussion_r569886969" expanded>

Line length try not to be longer than 120 chars.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/81#discussion_r569889860" expanded>

consider better boolean variable name
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569893239" expanded>

nice comment that helps with better understanding of the use of variables
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569893534" expanded>

consider shorter name for the method 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569893912" expanded>

avoid deep nesting 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r569894129" expanded>

Good comments follow through the code
</panel>

</panel>

<panel type="info" header="### 68. WANG..IHAN `@zihan9485` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/85#discussion_r570645972" expanded>

Should setters for boolean variables be in the form setDone()?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/85#discussion_r570649964" expanded>

Perhaps consider including @Override when overriding the toString method. This could apply for the other classes as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/85#discussion_r570650204" expanded>

I like the use of an extracted method to print the separator!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/85#discussion_r570651739" expanded>

Perhaps a clearer name for index like taskIndex would be better?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/8#discussion_r570653790" expanded>

I like this wordart! 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/8#discussion_r570654851" expanded>

Perhaps setters for boolean variables could be in the form setDone() instead?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/8#discussion_r570655137" expanded>

Clear use of if-else statements, however the switch statement may be too deeply indented and nested.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/8#discussion_r570657838" expanded>

Good extracted methods to improve code clarity
</panel>

</panel>

<panel type="info" header="### 69. ZHUA..NING `@jianningzhuang` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/84#discussion_r570654490" expanded>

Perhaps you could consider consolidating the duplicate conditional fragments? Since getStatusIcon() also checks for isDone, maybe you would not need to check for isDone within toString().
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/84#discussion_r570655331" expanded>

Perhaps you could consider using a plural form on names representing a collection of objects?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/84#discussion_r570656054" expanded>

Maybe it is better to be explicit on which class we want when importing instead of import java.util.*?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/84#discussion_r570656520" expanded>

Good use of extracting out common code into a method!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r570642741" expanded>

Perhaps you could consider using a plural form on names representing a collection of objects?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r570644825" expanded>

Perhaps you could consider using a plural form on names representing a collection of objects?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r570645470" expanded>

Similar to the previous naming, perhaps you could consider using a plural form on names representing a collection of objects?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r570650013" expanded>

I really like the use of camelCase for your variable names, but I am concerned that the name of the counter variable noOfTasks might be confusing as number was abbreviated to no. Maybe you could consider spelling number out?
</panel>

</panel>

<panel type="info" header="### 70. TAN .. HOW `@CabbageTime` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r570766146" expanded>

Perhaps you could consider using switch statement to prevent invalid input from the user.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r570766568" expanded>

Good usage of inheritance and polymorphism.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/82#discussion_r570769635" expanded>

Variable does sound like boolean variables!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570684408" expanded>

Follow the coding standards of brackets in if else statement well.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570685480" expanded>

Consider declare descriptionStart before the while loop and change the value in every condition.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570689289" expanded>

Good naming for arrays.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/17#discussion_r570689489" expanded>

Follows the standards of Javadoc comments.
</panel>

</panel>

<panel type="info" header="### 71. JALV..IANG `@jalvinchan` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569092246" expanded>

I think case and switch statement should have same indentation
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569097148" expanded>

Perhaps you can logo as a constant?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569097757" expanded>

Perhaps use name like line break? Since end sounds like ending the program.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/31#discussion_r569098675" expanded>

Switch and case statement should have the same indentation
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/6#discussion_r569100327" expanded>

Perhaps you can have a task manager class to handle the tasks instead of having everything inside main?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/6#discussion_r569102824" expanded>

Perhaps you can extract this if-else statement into a method?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/6#discussion_r569104735" expanded>

Perhaps you can create a method for the splitting of string task and date?
</panel>

</panel>

<panel type="info" header="### 72. CHUA.. WEI `@heyjinwei` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/93#discussion_r570687796" expanded>

Consider using switch to accomodate the possibilities
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/93#discussion_r570689750" expanded>

Consider using if-else statements for easier readability
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/93#discussion_r570689987" expanded>

Consider testing with a wider variety of test cases
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/93#discussion_r570690259" expanded>

Consider having a method to print this divider or having it as a constant string to print
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/93#discussion_r570690722" expanded>

Consider getting the indexOf the entire string instead of a single character to avoid unwanted outcomes with inputs with '/'
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/39#discussion_r570683797" expanded>

Good that boolean sounds like a boolean
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/39#discussion_r570684380" expanded>

Good comments throughout the code
</panel>

</panel>

<panel type="info" header="### 73. CHEW.. WEI `@tehtea` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r569905502" expanded>

Perhaps this unicode can be replaced with a more expressive constant instead, so that the comment can be removed
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r569906871" expanded>

Instead of using the `taskCount` variable, is it possible to use `tasks.length` instead, so there is one less variable to manage?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r569912726" expanded>

Neat use of method overriding too for each entity
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/99#discussion_r569913672" expanded>

All method names are in camelCase too
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/94#discussion_r569914960" expanded>

Agree with the TODOs here!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/94#discussion_r569915113" expanded>

Arbitrary unicode can be replaced by a more expressive constant instead
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/94#discussion_r569915287" expanded>

I like the use of method extraction for line breaks
</panel>

</panel>

<panel type="info" header="### 74. WANG..GXIN `@kangxinwang` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569905927" expanded>

Good Job in listing imported classes explicitly!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569908083" expanded>

Maybe you could extract the bye message as a method?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569908429" expanded>

switch-case statements are not indented, maybe you could change that?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/76#discussion_r569910511" expanded>

boolean should sound like a boolean. Maybe you could change the naming?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569912521" expanded>

Good job in making code readable!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569912795" expanded>

Good job in using a named constant!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/22#discussion_r569913552" expanded>

Maybe can rename the method to sound more like a verb?
</panel>

</panel>

<panel type="info" header="### 75. FOON..NDON `@brandonfoong` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/18#discussion_r569068510" expanded>

Function name seems pretty vague, maybe you can change it to something more descriptive (e.g. interactWithUser)?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/18#discussion_r569101683" expanded>

Good use of the override signature! Makes the inheritance much clearer.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/18#discussion_r569101977" expanded>

Personal suggestion - Maybe these functions can be classified under "read and parse user input"?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/18#discussion_r569102402" expanded>

If you frequently use the line variable (e.g. in printHello and printBye functions), you should declare it as a constant.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/13#discussion_r569049197" expanded>

There are multiple nested expressions, you can consider breaking it into multiple expressions for better readability. This will also help when handling exceptions from parseInt() in the future
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/13#discussion_r569061258" expanded>

Maybe you can consider using 'message' instead of 'm' as the variable name (to make it more descriptive). Also, since the argument (message) is an array, you can rename it as messages so that it is clearer.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/13#discussion_r569062922" expanded>

Would be good to keep the length of the comments consistent (e.g. executeAddDeadline and executeAddEvent) since they do similar actions.
</panel>

</panel>

<panel type="info" header="### 76. ZHON..UHAO `@Rye98` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r569890837" expanded>

I don't think this is necessary, as a blank space is guaranteed in the input.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r569891072" expanded>

Perhaps extracting this out into a method? I think it will make the code more readable.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r569891160" expanded>

Extra empty line.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/64#discussion_r569883411" expanded>

I think the variable name "argument" may be unclear for readers.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/64#discussion_r569885578" expanded>

This line is rather lengthy. Perhaps split into 2 separate lines?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/64#discussion_r569886935" expanded>

I like the use of the extra parent class to keep track of tasks.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/64#discussion_r569888829" expanded>

I like the creating of this method, makes the code much more readable.
</panel>

</panel>

<panel type="info" header="### 77. CHES..ERNG `@rageqqq` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/98#discussion_r569892773" expanded>

Why is SCANNER in caps?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/98#discussion_r569894506" expanded>

Use inheritance just like we learnt
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/98#discussion_r569894953" expanded>

Maybe use boolean variables to make this easier to understand
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/75#discussion_r569887585" expanded>

Using boolean variables instead of .startsWith and .equals can make things easier to understand.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/75#discussion_r569888840" expanded>

Same method name as line 58, maybe use printList for this method
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/75#discussion_r569889571" expanded>

Line can seem overly complicated, maybe use boolean variables to make it easier to digest
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/75#discussion_r569890300" expanded>

Storing "bye", "todo" etc. as strings can help when you need to add more code later on
</panel>

</panel>

<panel type="info" header="### 78. ANG .. HUI `@jhjhajh` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/93#discussion_r570643631" expanded>

It's great that you included this part of the code to catch any invalid input
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/93#discussion_r571099954" expanded>

You can also consider testing with corner cases, such as _null_ or try inputs that don't fit your command format
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/93#discussion_r571101393" expanded>

overall the code adheres to the coding guidelines, but there are some minor changes that can be made to improve on code readability, as suggested by the other reviewer.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r571104497" expanded>

It's nice that all the values used are well-explained. Constants are also in uppercase and readable.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r571107087" expanded>

Would be better if the spacings for brackets and parenthesis are more consistent. Can consider using the auto-formatting function for code style in your ide
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r571108181" expanded>

Great that there is a variety of test cases used, including invalid commands and syntax
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/47#discussion_r571109003" expanded>

Inconsistent spacings for space between parenthesis and brackets
</panel>

</panel>

<panel type="info" header="### 79. VIOL..UTRI `@violinyap` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r570055367" expanded>

Running boolean should be isRunning so it looks like a boolean
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r570056255" expanded>

public Event(String content) {
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r570057334" expanded>

public Todo (String name) {
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r570080795" expanded>

can use verb as the name of the function, "outputReaction" does not sound very clear
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r570087668" expanded>

good coding standard to limit one line long size
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r570088090" expanded>

good coding standard for switch statement
</panel>

</panel>

<panel type="info" header="### 80. LEON..TAMA `@L-Irvin` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/91#discussion_r569913487" expanded>

You can consider using "final" to indicate that the value is constant.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/91#discussion_r569913684" expanded>

Great job on writing a multi-line command as it looks neat!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/91#discussion_r569913853" expanded>

It would be better to name your classes in capital.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569909610" expanded>

You can consider adding a space after symbols such as '+', ',', etc.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569911923" expanded>

It would be nice to remove one empty line here so it would be consistent
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/69#discussion_r569912304" expanded>

Since you're naming the other classes as 'Events', 'Deadlines', and 'Todos', might be nice to change this to 'Tasks' as well.
</panel>

</panel>

<panel type="info" header="### 81. KIM ..HWAN `@joohwan58` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/95#discussion_r569911127" expanded>

Yeah is this a leftover from some debugging you were doing? please remove
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/95#discussion_r569911959" expanded>

Good of you to comment this so that readers can know what the unicode symbols are
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/95#discussion_r569912502" expanded>

Nice comment. Mentioning possible bugs for reviewers is great
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r569906095" expanded>

Why not use a switch statement like the above method? It is cleaner than nested if-else.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/79#discussion_r569909394" expanded>

Coding standard violation: else if should be on the same line as the closing bracket of the previous if block.
</panel>

</panel>

<panel type="info" header="### 82. CUI ..LING `@chenling1022` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569911216" expanded>

Nested for-loops might not be efficient.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569911482" expanded>

Good use of capital letter for constants

</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569911714" expanded>

can be more efficient through taking out common codes for each if-else statement
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569911887" expanded>

Simple and clean
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/51#discussion_r569912252" expanded>

good coding quality
</panel>

</panel>

<panel type="info" header="### 83. ANGE..G YI `@warmwhalefy` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r570681318" expanded>

i suggest to use Plural form for your variable
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r570683616" expanded>

maybe can name "listTasks" instead
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r570684748" expanded>

maybe can add these lines into your deadline class (:
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r570685108" expanded>

good use of case statements! very little nesting, good job (:
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/9#discussion_r570686211" expanded>

to improve readability, i suggest to have a section divider variable for this! (:
</panel>

</panel>

<panel type="info" header="### 84. ISA ..ARON `@isaharon` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/62#discussion_r569082971" expanded>

Cool usage of TaskManager class to handle Tasks. However, the naming of the variable might be too similar with the  array of tasks within the class.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/62#discussion_r569085714" expanded>

Nice usage of enum!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/41#discussion_r569054028" expanded>

Do take note of the formatting of the if-else block to meet the coding standards.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/41#discussion_r569056188" expanded>

Looks good but do consider removing the curly braces.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/41#discussion_r569060826" expanded>

In using K&R style brackets, take note of the spacing of the initial curly braces. Do ensure they are consistent throughout for all opening curly braces.
</panel>

</panel>

<panel type="info" header="### 85. MABE..AXIN `@Emkay16` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/58#discussion_r569091154" expanded>

Since the Duke logo is unlikely to change while in use, would it perhaps be better to declare this as a constant?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/6#discussion_r569053294" expanded>

Since the Duke logo is unlikely to change while in use, would it perhaps be better to declare it as a constant instead?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/6#discussion_r569057256" expanded>

If I recall correctly, if-else statements should have the form
```
if (condition) {
    statements;
} else {
    statements;
}
```
Perhaps you could review the java coding standard again?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/6#discussion_r569062311" expanded>

The formatting here is a little inconsistent (no space between `)` and `{` )
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/6#discussion_r569063047" expanded>

I like how clearly your comments explain your code!
</panel>

</panel>

<panel type="info" header="### 86. KRIT..NEER `@Krithigha24` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/100#discussion_r570645123" expanded>

Perhaps K&R egyptian style brackets should be useed?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/100#discussion_r570646286" expanded>

I like how you used camelCase for variable names
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/66#discussion_r570712599" expanded>

I like the usage of camelCase for variables
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/66#discussion_r570714053" expanded>

I like the usage of k&r style brackets
</panel>

</panel>

<panel type="info" header="### 87. XIA ..FUXI `@fupernova` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/60#discussion_r569052008" expanded>

I think there's a typo here. There should be a space between the class name and the opening brace.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/60#discussion_r569053720" expanded>

It might be better to have spaces between the conditional statement and opening braces.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/32#discussion_r569058926" expanded>

I think it would be better to name the array after the type of object it contains. (eg. naming the array "Tasks" instead of "list")
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/32#discussion_r569061592" expanded>

Might be better to extract a method out for this? Same for line 89 (eg. printNoTime() )
</panel>

</panel>

<panel type="info" header="### 88. VALL..TEJA `@nagiteja` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r573821940" expanded>

Excellent use of Try and Catch.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r573827053" expanded>

Could use more OOP
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/53#discussion_r573827613" expanded>

Use a switch statement instead of a if and else statement
</panel>

</panel>

<panel type="info" header="### 89. ZHAN..GZHE `@zhangyongzhe20` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/78#discussion_r569906708" expanded>

better to name "isDone"
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/73#discussion_r569905005" expanded>

Good naming standard
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/4#discussion_r569910972" expanded>

switch variable not indiciate much info.
</panel>

</panel>

<panel type="info" header="### 90. STEF..TING `@s-t-e-f` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/11#discussion_r569356934" expanded>

Maybe can rename the function so that it gives more insight to what the function does
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/11#discussion_r569373242" expanded>

Good use of object-oriented programming concepts! Overall code was well written and clear.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/5#discussion_r569089684" expanded>

Maybe can list the imported classes explicitly 
</panel>

</panel>

<panel type="info" header="### 91. LIU ..ANLI `@yanli1215` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/5#discussion_r569094927" expanded>

I think that maybe the main function can be more logically structured.
if it is possible, varying the level of abstraction within a code fragment should be avoided.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/5#discussion_r569096945" expanded>

i think maybe the name of the function can be changed to toString(), which inherited from the Object class that is used by Java to get a string representation of the object. it will be called automatically by System.out.println()
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/5#discussion_r569098032" expanded>

I like the classes you defined and their inherent.
maybe the code can be seperated into several class files.
</panel>

</panel>

<panel type="info" header="### 92. HION.. HAN `@hiongkaihan` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/25#discussion_r569068665" expanded>

I think that for if else statement, we are supposed to flush the else after the if statement closing bracket }. For example,

if (condition) {
    statements;
} else {
    statements;
}
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/25#discussion_r569071671" expanded>

Good to standardize having a space between ) and {
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/25#discussion_r569166029" expanded>

Maybe can use constants instead of magic numbers
</panel>

</panel>

<panel type="info" header="### 93. JIAN..IONG `@951553394` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r569883871" expanded>

clear indentation good format
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r569884899" expanded>

clear structure easy to read
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/96#discussion_r569885316" expanded>

clear if else format
</panel>

</panel>

<panel type="info" header="### 94. MUHA..AMAL `@Zufiqqar` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/77#discussion_r569908798" expanded>

What you can do here is }else{ in 1 line if you really want to follow the coding standard
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/77#discussion_r569914831" expanded>

Easy to understand what this function does by the function name. Good use of the naming. I think to improve on the naming and readability further, the parameter t can be renamed to maybe newTask. This can be easily understood that the function storeTask is storing the newly created task into a certain position on the tasks array. Lastly, you will be using newTask.description instead of t.description.
</panel>

</panel>

<panel type="info" header="### 95. WONG..PING `@liping-eng` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/94#discussion_r570642603" expanded>

Agree with the good use of lineBreak() on method extraction! Perhaps can create a class for all the miscellaneous output like this.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/94#discussion_r570918270" expanded>

Perhaps change "taskList" to "tasks" (plural form) as it is representing a collection of objects.
</panel>

</panel>

<panel type="info" header="### 96. JERE.. PNG `@averliz` (1 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/86#discussion_r573404566" expanded>

Can remove comments that are unrelated to the task
</panel>

</panel>

<panel type="info" header="### 97. LEOW..XUAN `@leowxx` (1 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S2/ip/pull/29#discussion_r569052285" expanded>

I like the use of Override for methods, as they seem to be used appropriately. (I have noticed this for several other methods as well)
</panel>

</panel>

<panel type="info" header="### 98. JETH..PING `@JethroPhuah` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 99. KOH ..JUEY `@boonjuey` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 100. NG W..EVIN `@KevinNgWK` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 101. EMIL..AXIN `@EmilyTJX` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 102. NOOR..RAFI `@NoorSarrah` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 103. BRYA..IANG `@bryanwhl` (0 comments)"  collapsed>


</panel>
